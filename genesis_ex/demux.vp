/*
 * demux
 * 
 * 
 *
 *   Author: John Brunhaver
 *   Created:          02/07/13
 *
 *   <jbrunhaver@gmail.com>    
 */
/******************************************************************************/
/* Copyright (c) 2013, STANFORD UNIVERSITY. All rights reserved.              */
/* Copyright (c) 2013, John Brunhaver. All rights reserved.                   */
/*                                                                            */
/* Redistribution and use in source and binary forms, with or without         */
/* modification, are permitted provided that the following conditions         */
/* are met:                                                                   */
/*  * Redistributions of source code must retain the above copyright          */
/*    notice, this list of conditions and the following disclaimer.           */
/*  * Redistributions in binary form must reproduce the above copyright       */
/*    notice, this list of conditions and the following disclaimer in the     */
/*    documentation and/or other materials provided with the distribution.    */
/*  * Neither the name of STANFORD UNIVERSITY nor the names of its            */
/*    contributors may be used to endorse or promote products derived         */
/*    from this software without specific prior written permission.           */
/*                                                                            */
/* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ''AS IS'' AND ANY       */
/* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE          */
/* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR         */
/* PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR          */
/* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,      */
/* EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,        */
/* PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR         */
/* PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY        */
/* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT               */
/* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE      */
/* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.       */
/******************************************************************************/

//;
//; use POSIX ;
//; use strict ;
//; use warnings FATAL=>qw(all) ;
//; use diagnostics ;
//; use conv_utility ;
//;
//; my $W     = parameter( Name=>'Width', Val=>[1]      , Doc=>"Output Signal bit width");
//; ref( $W ) eq 'ARRAY' or $self->error( "Width param must be array" );
//; scalar( @{$W} ) == 1 or die "Currently odes not support more than one dimension for demux" ; #Fixme below
//; my $S     = parameter( Name=>'Sel'  , Val=>2        , Doc=>"Number of select lines " );
//; my $Mode  = parameter( Name=>'Mode' , Val=>'OneHot' , Doc=>"Mode of the run" , list=>['OneHot'] );
//;
//; my @W     = @{$W} ;
//; my $PS = "[" .  ($W[$#W]-1)  . ":0]" ;
//; my $US = "";
//; for( my $i = 0 ; $i < $#W ; $i++ ){ $US .= "[" . ($W[$i]-1) . ":0]"; } ; 
//; my $SS = "[" .  ($S-1)  . ":0]" ;
//;

module `mname()`
   (
    input  logic `$PS` a`$US` ,
    input  logic `$SS` sel ,
    output logic `$PS` z`$SS``$US` ,
    input  logic clk ,
    input  logic rst 
    );

//; if ( getVERIFMODE( $self ) ){
   assert property( @( posedge clk ) !rst || !$isunknown(sel) );
   assert property( @( posedge clk ) !rst || $onehot0(sel) );
//; print checkUnpackedSignal( $self , "z" , \@W ); 
//; }


   
//; if( $Mode eq 'OneHot'  ){
always_comb begin
//; for( my $i = 0 ; $i < $S ; $i++ ){
     z[`$i`] =  sel[`$i`] ? a : `$W[0]`'d0  ; // FIXME-. d0 needs to be unpacked array of zeros
//; }    
end
//; } else { 
//; $self->error("mux Error: Unknown mode $Mode\n")
//; }

   
endmodule : `mname()`
